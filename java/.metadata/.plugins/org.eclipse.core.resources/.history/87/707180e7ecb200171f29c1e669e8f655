import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

public class Trans
{
	public static void main(String[] args) throws IOException
	{
		File file = new File("/home/elvis/test.txt");

		// 31 for name, 4 for id card, 4 for stu id,
		int readInt = 1024;

		InputStream in = null;
		byte[] bytes = null;
		in = new FileInputStream(file);

		// readInt = in.available();
		bytes = new byte[readInt];

		in.read(bytes);
		in.close();

		String output = new String(bytes);
		// System.out.println(output);
		byte[] temp = output.getBytes();
		
		readFileByBytes("/home/elvis/test.txt");
	}

	public static void readFileByBytes(String fileName)
	{
		File file = new File(fileName);
		InputStream in = null;
		/*
		try
		{
			System.out.println("以字节为单位读取文件内容，一次读一个字节：");
			// 一次读一个字节
			in = new FileInputStream(file);
			int tempbyte;
			while ((tempbyte = in.read()) != -1)
			{
				System.out.write(tempbyte);
			}
			in.close();
		} catch (IOException e)
		{
			e.printStackTrace();
			return;
		}
		*/
		try
		{
			System.out.println("以字节为单位读取文件内容，一次读多个字节：");
			// 一次读多个字节
			byte[] tempbytes = new byte[31];
			byte[] cardID = new byte[4];
			byte[] stuID = new byte[4];
			int byteread = 0;
			in = new FileInputStream(fileName);
			// Trans.showAvailableBytes(in);
			// 读入多个字节到字节数组中，byteread为一次读入的字节数
			// while ((byteread = in.read(tempbytes)) != -1)
			{
				in.read(tempbytes);
				System.out.write(tempbytes, 0, 31);
				System.out.println("done");
				int out;
				out = in.read(cardID);
				System.out.println("out : " + out);
				out = in.read(stuID);
				System.out.println("out : " + out);
				// System.out.write(cardID, 0, 4);
				String strCardID = new String(cardID, "ISO-8859-1");
				System.out.println(strCardID);
				// System.out.println("done");
				// System.out.write(stuID, 0, 4);
				String strStuID = new String(stuID, "ISO-8859-1");
				System.out.println(strStuID);
				// System.out.println("done");
			}
		} catch (Exception e1)
		{
			e1.printStackTrace();
		} finally
		{
			if (in != null)
			{
				try
				{
					in.close();
				} catch (IOException e1)
				{
				}
			}
		}
	}

	private static void showAvailableBytes(InputStream in)
	{
		try
		{
			System.out.println("当前字节输入流中的字节数为:" + in.available());
		} catch (IOException e)
		{
			e.printStackTrace();
		}
	}
}
